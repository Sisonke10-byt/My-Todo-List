import { json } from "express/lib/response";

 // Fetch tasks from LocalStorage
const fetchTasks = () => {
  const tasks = localStorage.getItem('tasks');
  return tasks ? JSON.parse(tasks) : [];
};

// Save tasks to LocalStorage
const saveTasks = (tasks) => {
  localStorage.setItem('tasks', JSON.stringify(tasks));
};

// Add a task
const addTask = (taskText) => {
  const tasks = fetchTasks();
  tasks.push({ text: taskText, completed: false });
  saveTasks(tasks);
  renderTasks();
};

// Remove a task
const removeTask = (index) => {
  const tasks = fetchTasks();
  tasks.splice(index, 1);
  saveTasks(tasks);
  renderTasks();
};

// Toggle task completion
const toggleTaskCompletion = (index) => {
  const tasks = fetchTasks();
  tasks[index].completed = !tasks[index].completed;
  saveTasks(tasks);
  renderTasks();
};

// Render tasks
const renderTasks = () => {
  const tasks = fetchTasks();
  const taskContainer = document.querySelector('.toDoList');
  taskContainer.innerHTML = tasks
    .map(
      (task, index) => `
        <li class="task">
          <span style="text-decoration: ${task.completed ? 'line-through' : 'none'};">
            ${task.text}
          </span>
          <button class="button complete" onclick="toggleTaskCompletion(${index})">completed</button>
          <button class="button delete" onclick="removeTask(${index})">Delete</button>
        </li>
      `
    )
    .join('');
};

// Event listener for the form submission
document.querySelector('.form').addEventListener('submit', (e) => {
  e.preventDefault();
  const taskInput = document.querySelector('.form__input');
  const task = taskInput.value.trim();
  if (task) {
    addTask(task);
    taskInput.value = ''; // Clear input after adding the task
  }
}); 

// Initial render
renderTasks();

    Server.js initial code 

    const express = require('express');
    const app = express();
    const port = 3001;
    
    // Serve static files from the "public" folder
    app.use(express.static('public'));
    
    // Define a default route
    app.get('/', (req, res) => {
      res.sendFile(__dirname + '/public/index.html'); // Serve the main HTML file
    });
    
    // Start the server
    app.listen(port, () => {
      console.log(`Server running at http://localhost:${port}`);
    });

    top of JS FILE

    // Fetch tasks from LocalStorage
const fetchTasks = () => {
  const tasks = localStorage.getItem('tasks');
  return tasks ? JSON.parse(tasks) : [];
};

// Update renderTasks accordingly
const renderTasks = async () => {
  const tasks = await fetchTasks();
  // Rest of your rendering logic...
};
    
  